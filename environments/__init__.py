# environments/__init__.py - Environment Package

"""
üèóÔ∏è Trading Environments Package

‡∏£‡∏∞‡∏ö‡∏ö Environment ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏° Trading Mode:
- ConservativeEnvironment: ‡πÉ‡∏ä‡πâ RL Agent ‡πÄ‡∏î‡∏¥‡∏° (HOLD ‡∏ö‡πà‡∏≠‡∏¢, ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
- AggressiveEnvironment: ‡πÉ‡∏ä‡πâ AI Recovery Brain (‡πÄ‡∏ó‡∏£‡∏î‡∏°‡∏≤‡∏Å, ‡πÅ‡∏Å‡πâ‡πÑ‡∏°‡πâ‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞)

Usage:
    from environments import ConservativeEnvironment, AggressiveEnvironment
    
    # Conservative Mode
    env = ConservativeEnvironment(mt5_interface, config)
    
    # Aggressive Mode  
    env = AggressiveEnvironment(mt5_interface, config)
"""

# Import environments
try:
    from .conservative_env import ConservativeEnvironment
    print("‚úÖ ConservativeEnvironment loaded")
except ImportError as e:
    print(f"‚ùå ConservativeEnvironment import error: {e}")
    ConservativeEnvironment = None

try:
    from .aggressive_env import AggressiveEnvironment
    print("‚úÖ AggressiveEnvironment loaded")
except ImportError as e:
    print(f"‚ùå AggressiveEnvironment import error: {e}")
    AggressiveEnvironment = None

# Available environments
__all__ = [
    'ConservativeEnvironment',
    'AggressiveEnvironment'
]

# Environment factory
def create_environment(mode: str, mt5_interface, config, historical_data=None):
    """
    üè≠ Environment Factory - ‡∏™‡∏£‡πâ‡∏≤‡∏á environment ‡∏ï‡∏≤‡∏° mode
    
    Args:
        mode: 'conservative' ‡∏´‡∏£‡∏∑‡∏≠ 'aggressive'
        mt5_interface: MT5 connector
        config: Configuration dict
        historical_data: Historical data for training
    
    Returns:
        Environment instance
    """
    try:
        if mode.lower() == 'conservative':
            if ConservativeEnvironment is None:
                raise ImportError("ConservativeEnvironment not available")
            return ConservativeEnvironment(mt5_interface, config, historical_data)
            
        elif mode.lower() == 'aggressive':
            if AggressiveEnvironment is None:
                raise ImportError("AggressiveEnvironment not available")
            return AggressiveEnvironment(mt5_interface, config, historical_data)
            
        else:
            raise ValueError(f"Unknown environment mode: {mode}")
            
    except Exception as e:
        print(f"‚ùå Environment creation error: {e}")
        # Fallback to conservative if available
        if ConservativeEnvironment is not None:
            print("üõ°Ô∏è Falling back to ConservativeEnvironment")
            return ConservativeEnvironment(mt5_interface, config, historical_data)
        else:
            raise e

# Version info
__version__ = "1.0.0"